<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu20.04.5使用acme.sh为NameSilo申请泛域名证书，为网站添加SSL开启HTTPS</title>
      <link href="posts/4fc64cc7.html"/>
      <url>posts/4fc64cc7.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="准备nginx环境"><a href="#准备nginx环境" class="headerlink" title="准备nginx环境"></a>准备nginx环境</h2><hr><p>首先安装nginx（nginx 1.11版本后支持双证书，请确保 nginx 版本号大于等于 1.11.0）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> nginx-full<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看nginx当前版本是否大于 1.11.0</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="获取acme-sh脚本，安装并配置"><a href="#获取acme-sh脚本，安装并配置" class="headerlink" title="获取acme.sh脚本，安装并配置"></a>获取acme.sh脚本，安装并配置</h2><hr><p>然后终端依次执行如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> https://get.acme.sh <span class="token operator">|</span> <span class="token function">sh</span> -s <span class="token assign-left variable">email</span><span class="token operator">=</span>xxxxxxxxxx@qq.com   <span class="token comment">#根据你的邮箱来填</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">Namesilo_Key</span><span class="token operator">=</span><span class="token string">"xxxxxxxxxxxxxxx"</span>     <span class="token comment">#填写你NameSilo域名提供商的Api_Key</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">MAX_RETRY_TIMES</span><span class="token operator">=</span><span class="token number">100</span>      <span class="token comment">#设置失败时最大的自动重试次数</span><span class="token builtin class-name">source</span> ~/.bashrc   <span class="token comment">#使当前配置马上生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="开始申请证书"><a href="#开始申请证书" class="headerlink" title="开始申请证书"></a>开始申请证书</h2><hr><p>设置默认申请 Let’s Encrypt 的 CA 证书（可选可不选，不选就是默认ZeroSSL颁发的证书）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">acme.sh --set-default-ca --server letsencrypt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>申请 Let’s Encrypt RSA 泛域名证书（xxxx.com请根据你自己实际的域名填写）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">acme.sh --issue --dns dns_namesilo --dnssleep <span class="token number">900</span> -d xxxx.com -d <span class="token string">'*.xxxx.com'</span> -k <span class="token number">4096</span> --force<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>申请 Let’s Encrypt ECC 泛域名证书（xxxx.com请根据你自己实际的域名填写）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">acme.sh --issue --dns dns_namesilo --dnssleep <span class="token number">900</span> -d xxxx.com -d <span class="token string">'*.xxxx.com'</span> -k ec-256 --force<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="获取生成的证书"><a href="#获取生成的证书" class="headerlink" title="获取生成的证书"></a>获取生成的证书</h2><hr><p>申请证书成功后，屏幕上会显示出证书存放的路径，将其找到并下载下来即可。</p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NameSilo申请泛域名证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pve7.2-x升级与优化教程</title>
      <link href="posts/123ef415.html"/>
      <url>posts/123ef415.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><hr><p>1.准备网络环境，将域名proxmox.com添加到强制代理名单里</p><h2 id="设置DNS"><a href="#设置DNS" class="headerlink" title="设置DNS"></a>设置DNS</h2><hr><p>2.若安装时未设置DNS，请先设置DNS（如已设置过请忽略此步骤）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"nameserver  223.5.5.5"</span> <span class="token operator">&gt;&gt;</span> /etc/resolv.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"nameserver  114.114.114.114"</span> <span class="token operator">&gt;&gt;</span> /etc/resolv.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="删除企业源和中文社区源"><a href="#删除企业源和中文社区源" class="headerlink" title="删除企业源和中文社区源"></a>删除企业源和中文社区源</h2><hr><p>3.删除企业源和中文社区源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf /etc/apt/sources.list.d/pve-enterprise.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf /etc/apt/sources.list.d/pve-install-repo.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加中文社区源"><a href="#添加中文社区源" class="headerlink" title="添加中文社区源"></a>添加中文社区源</h2><hr><p>4.添加中文社区源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"deb http://download.proxmox.wiki/debian/pve bullseye pve-no-subscription"</span> <span class="token operator">&gt;</span>/etc/apt/sources.list.d/pve-install-repo.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"deb http://download.proxmox.wiki/debian/ceph-octopus bullseye main"</span> <span class="token operator">&gt;</span> /etc/apt/sources.list.d/ceph.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>中文社区源抽风的时候，改回Proxmox官方源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription"</span> <span class="token operator">&gt;</span>/etc/apt/sources.list.d/pve-install-repo.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="修改为国内源"><a href="#修改为国内源" class="headerlink" title="修改为国内源"></a>修改为国内源</h2><hr><p>5.修改为国内源（选其一即可）</p><ul><li><p>阿里云源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">&gt;</span>/etc/apt/sources.list<span class="token operator">&lt;&lt;</span><span class="token string">'EOF'deb http://mirrors.aliyun.com/debian/ bullseye main non-free contribdeb http://mirrors.aliyun.com/debian/ bullseye-updates main non-free contribdeb http://mirrors.aliyun.com/debian/ bullseye-backports main non-free contribdeb https://mirrors.aliyun.com/debian-security bullseye-security main contrib non-freedeb-src http://mirrors.aliyun.com/debian/ bullseye main non-free contribdeb-src http://mirrors.aliyun.com/debian/ bullseye-updates main non-free contribdeb-src http://mirrors.aliyun.com/debian/ bullseye-backports main non-free contribdeb-src https://mirrors.aliyun.com/debian-security bullseye-security main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bullseye pve-no-subscriptionEOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>腾讯云源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">&gt;</span>/etc/apt/sources.list<span class="token operator">&lt;&lt;</span><span class="token string">'EOF'deb https://mirrors.cloud.tencent.com/debian/ bullseye main contrib non-freedeb https://mirrors.cloud.tencent.com/debian/ bullseye-updates main contrib non-freedeb https://mirrors.cloud.tencent.com/debian/ bullseye-backports main contrib non-freedeb https://mirrors.cloud.tencent.com/debian-security bullseye-security main contrib non-freedeb-src https://mirrors.cloud.tencent.com/debian/ bullseye main contrib non-freedeb-src https://mirrors.cloud.tencent.com/debian/ bullseye-updates main contrib non-freedeb-src https://mirrors.cloud.tencent.com/debian/ bullseye-backports main contrib non-freedeb-src https://mirrors.cloud.tencent.com/debian-security bullseye-security main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bullseye pve-no-subscriptionEOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="升级到最新内核"><a href="#升级到最新内核" class="headerlink" title="升级到最新内核"></a>升级到最新内核</h2><hr><p>6.升级到最新内核</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看当前内核版本信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> -r<span class="token number">5.11</span>.22-1-pve<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以下分两种情况：<br>(1)不安装新内核，只安装当前内核头文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> linux-headers-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -r<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2)安装新内核<br>查找内核</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-cache</span> search linux <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'PVE Kernel Image'</span>pve-kernel-5.11.17-1-pve - The Proxmox PVE Kernel Imagepve-kernel-5.11.21-1-pve - The Proxmox PVE Kernel Imagepve-kernel-5.11.22-2-pve - The Proxmox PVE Kernel Imagepve-kernel-5.11.7-1-pve - The Proxmox PVE Kernel Imagepve-kernel-5.4.119-1-pve - The Proxmox PVE Kernel Imagepve-kernel-5.4.124-1-pve - The Proxmox PVE Kernel Imagepve-kernel-5.4.128-1-pve - The Proxmox PVE Kernel Image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行安装新内核</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> pve-kernel-5.4.128-1-pve<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最新内核安装完成后重启一下，才能删除旧内核</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>PS：因为在PVE下创建虚拟机 Realtek RTL8125 2.5GbE 的网卡 与1G的交换机连接 无法跑满速（只有大概20 ~ 40Mb/s），为降内核版本了安装 realtek-r8125-dkms_9.005.06-1_amd64.deb 驱动进行测试</p><p>实际上据说也是驱动bug，新的r8169驱动也支持这个网卡并且修复了这个bug，但是实际上测试并没有……</p><p>解决办法：<br>Chipset -&gt; South Cluster Configuration -&gt; PIC Express Configuration -&gt; PCI Express Root Port</p><p>将全部PCI Express Root Port 的 ASPM 的Auto改成Disable</p><h2 id="移除-Proxmox-VE-旧版内核"><a href="#移除-Proxmox-VE-旧版内核" class="headerlink" title="移除 Proxmox VE 旧版内核"></a>移除 Proxmox VE 旧版内核</h2><hr><p>7.移除 Proxmox VE 旧版内核<br>a) 安装 pvekclean</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> -y <span class="token function">install</span> <span class="token function">git</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> -rf ./pvekclean/ <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> clone https://hub.fastgit.org/jordanhillis/pvekclean.git <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> pvekclean <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x pvekclean.sh <span class="token operator">&amp;&amp;</span> ./pvekclean.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> -y <span class="token function">install</span> <span class="token function">git</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> -rf ./pvekclean/ <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> clone https://github.com/jordanhillis/pvekclean.git <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> pvekclean <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x pvekclean.sh <span class="token operator">&amp;&amp;</span> ./pvekclean.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>b) 运行 pvekclean执行删除</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pvekclean -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="更换r8169驱动为r8125驱动"><a href="#更换r8169驱动为r8125驱动" class="headerlink" title="更换r8169驱动为r8125驱动"></a>更换r8169驱动为r8125驱动</h2><hr><p>8.更换r8169驱动为r8125驱动<br>安装前请参考换源教程，将内核升级至5.15以上，建议将系统升级至最新（重要，必做）<br>若你主板有螃蟹8111网卡，请勿操作。</p><p>安装 dkms 和 pve-headers</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> dkms pve-headers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装ethtool工具</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">ethtool</span> -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在线安装命令，驱动包持续更新，如果驱动有更新请修改对应文件名（和手动安装二选一）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://github.com/awesometic/realtek-r8125-dkms/releases/download/9.009.01-1/realtek-r8125-dkms_9.009.01-1_amd64.deb dpkg -i /root/realtek-r8125-dkms_9.009.01-1_amd64.deb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>手动安装命令，如果没有网络环境下载不成功，请用手动安装（和在线安装二选一）<br>通过 WinSCP 等软件把驱动安装包上传至 PVE 的 /tmp 文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dpkg -i --force-overwrite /tmp/realtek-r8125-dkms_9.009.01-1_amd64.deb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>屏蔽系统自带的r8169驱动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'blacklist r8169'</span> <span class="token operator">&gt;&gt;</span> /etc/modprobe.d/blacklist-r8169.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>刷新和重启</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">update-initramfs -u -k all<span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看刚才安装和屏蔽的驱动是否生效</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ethtool</span> -i enp2s0  <span class="token comment">#enp2s0是你的非直通网卡</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提示结果如下，说明成功了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@pve:~<span class="token comment"># ethtool -i enp2s0</span>driver: r8125version: <span class="token number">9.009</span>.01-NAPIfirmware-version: expansion-rom-version: bus-info: 0000:02:00.0supports-statistics: <span class="token function">yes</span>supports-test: nosupports-eeprom-access: nosupports-register-dump: <span class="token function">yes</span>supports-priv-flags: no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#项目地址：<a href="https://github.com/awesometic/realtek-r8125-dkms">https://github.com/awesometic/realtek-r8125-dkms</a></p><h2 id="调整服务器时间"><a href="#调整服务器时间" class="headerlink" title="调整服务器时间"></a>调整服务器时间</h2><hr><p>9.调整服务器时间(调整后PVE联网几分钟会自动更新时间)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nano</span> /etc/systemd/timesyncd.conf<span class="token punctuation">[</span>Time<span class="token punctuation">]</span><span class="token assign-left variable">NTP</span><span class="token operator">=</span>ntp1.cn.ntp.org.cn ntp2.cn.pool.ntp.org <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="移除-Proxmox-VE-无有效订阅提示"><a href="#移除-Proxmox-VE-无有效订阅提示" class="headerlink" title="移除 Proxmox VE 无有效订阅提示"></a>移除 Proxmox VE 无有效订阅提示</h2><hr><p>10.移除 Proxmox VE 无有效订阅提示 (6.4-5、6、8、9 、13；7.0-9、10、11、13、14、14-1；7.1-5、6、8、10、11、12；7.2-3、4已测试通过)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> -Ezi.bak <span class="token string">"s/(Ext.Msg.show\(\{\s+title: gettext\('No valid sub)/void\(\{ \/\/<span class="token entity" title="\1">\1</span>/g"</span> /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js <span class="token operator">&amp;&amp;</span> systemctl restart pveproxy.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Pve虚拟机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Proxmox VE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenWrt的DDNS服务开机或重启后无法自启_解决方法</title>
      <link href="posts/b675a796.html"/>
      <url>posts/b675a796.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>登录OpenWrt管理页面，找到 系统-启动项-本地启动脚本，复制粘贴以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ddns restart</span>/etc/init.d/ddns restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>提交保存后，重启一次OpenWrt系统即可正常自启动DDNS服务。</p>]]></content>
      
      
      <categories>
          
          <category> OpenWrt教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenWrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu20.04.5上使用命令安装RocketChat</title>
      <link href="posts/1bd586c8.html"/>
      <url>posts/1bd586c8.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h2><hr><p>安装相关依赖</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> -y <span class="token function">install</span> build-essential asciidoc binutils <span class="token function">bzip2</span> <span class="token function">gawk</span> gettext <span class="token function">git</span> libncurses5-dev libz-dev patch <span class="token function">unzip</span> zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> -y <span class="token function">install</span> build-essential asciidoc binutils <span class="token function">bzip2</span> <span class="token function">gawk</span> gettext <span class="token function">git</span> libncurses5-dev libz-dev patch python3 python2.7 <span class="token function">unzip</span> zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf <span class="token function">wget</span> <span class="token function">curl</span> swig <span class="token function">rsync</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential <span class="token punctuation">\</span><span class="token function">bzip2</span> ccache cmake cpio <span class="token function">curl</span> device-tree-compiler fastjar flex <span class="token function">gawk</span> gettext gcc-multilib g++-multilib <span class="token punctuation">\</span><span class="token function">git</span> gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev <span class="token punctuation">\</span>libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz <span class="token punctuation">\</span><span class="token function">mkisofs</span> msmtp <span class="token function">nano</span> ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils <span class="token punctuation">\</span><span class="token function">rsync</span> scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl <span class="token function">unzip</span> <span class="token function">vim</span> <span class="token function">wget</span> xmlto xxd zlib1g-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更新Ubuntu"><a href="#更新Ubuntu" class="headerlink" title="更新Ubuntu"></a>更新Ubuntu</h2><hr><p>我们的第一步，更新我们的 Ubuntu：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加-MongoDB-GPG-密钥"><a href="#添加-MongoDB-GPG-密钥" class="headerlink" title="添加 MongoDB GPG 密钥"></a>添加 MongoDB GPG 密钥</h2><hr><p>接下来是添加 MongoDB GPG 密钥：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -qO - https://www.mongodb.org/static/pgp/server-4.4.asc <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加-MongoDB-存储库"><a href="#添加-MongoDB-存储库" class="headerlink" title="添加 MongoDB 存储库"></a>添加 MongoDB 存储库</h2><hr><p>我们将添加 MongoDB 存储库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/mongodb-org-4.4.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="更新-repos-列表，配置-Node-并安装-curl"><a href="#更新-repos-列表，配置-Node-并安装-curl" class="headerlink" title="更新 repos 列表，配置 Node 并安装 curl"></a>更新 repos 列表，配置 Node 并安装 curl</h2><hr><p>接下来是更新 repos 列表，配置 Node 并安装 curl：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y <span class="token function">curl</span> <span class="token operator">&amp;&amp;</span> <span class="token function">curl</span> -sL https://deb.nodesource.com/setup_14.x <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装-MongoDB-和其他要求"><a href="#安装-MongoDB-和其他要求" class="headerlink" title="安装 MongoDB 和其他要求"></a>安装 MongoDB 和其他要求</h2><hr><p>我们将安装 MongoDB 和其他要求：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> -y build-essential mongodb-org nodejs graphicsmagick<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="检查安装的Node版本"><a href="#检查安装的Node版本" class="headerlink" title="检查安装的Node版本"></a>检查安装的Node版本</h2><hr><p>检查安装的Node版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">node --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装继承-yn"><a href="#安装继承-yn" class="headerlink" title="安装继承 yn"></a>安装继承 yn</h2><hr><p>让我们安装继承 yn:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> -g inherits n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="创建符号链接"><a href="#创建符号链接" class="headerlink" title="创建符号链接"></a>创建符号链接</h2><hr><p>为节点创建符号链接：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/bin/node /usr/local/bin/node<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="下载RocketChat"><a href="#下载RocketChat" class="headerlink" title="下载RocketChat"></a>下载RocketChat</h2><hr><p>下面是下载RocketChat，大约160Mb：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -L https://cdn-download.rocket.chat/build/rocket.chat-4.6.3.tgz -o /tmp/rocket.chat.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="解压RocketChat"><a href="#解压RocketChat" class="headerlink" title="解压RocketChat"></a>解压RocketChat</h2><hr><p>我们将RocketChat解压到tmp目录下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> -xzf /tmp/rocket.chat.tgz -C /tmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装RocketChat"><a href="#安装RocketChat" class="headerlink" title="安装RocketChat"></a>安装RocketChat</h2><hr><p>是时候安装RocketChat了：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /tmp/bundle/programs/server <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>移动目录：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span><span class="token function">sudo</span> <span class="token function">mv</span> /tmp/bundle /opt/Rocket.Chat<span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="添加RocketChat用户到系统并分配权限"><a href="#添加RocketChat用户到系统并分配权限" class="headerlink" title="添加RocketChat用户到系统并分配权限"></a>添加RocketChat用户到系统并分配权限</h2><hr><p>添加RocketChat用户到系统并分配权限：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">useradd</span> -M rocketchat <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">usermod</span> -L rocketchat<span class="token function">sudo</span> <span class="token function">chown</span> -R rocketchat:rocketchat /opt/Rocket.Chat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="创建RocketChat启动服务"><a href="#创建RocketChat启动服务" class="headerlink" title="创建RocketChat启动服务"></a>创建RocketChat启动服务</h2><hr><p>我们要创建RocketChat启动服务，在终端中完整或逐行粘贴以下代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">|</span><span class="token function">sudo</span> <span class="token function">tee</span> -a /etc/systemd/system/rocketchat.service</span>[Unit]Description=The Rocket.Chat serverAfter=network.target remote-fs.target nss-lookup.target nginx.service mongod.service[Service]ExecStart=/usr/local/bin/node /opt/Rocket.Chat/main.jsStandardOutput=syslogStandardError=syslogSyslogIdentifier=rocketchatUser=rocketchatEnvironment=MONGO_URL=mongodb://localhost:27017/rocketchat?replicaSet=rs01 MONGO_OPLOG_URL=mongodb://localhost:27017/local?replicaSet=rs01 ROOT_URL=http://localhost:3000/ PORT=3000[Install]WantedBy=multi-user.targetEOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置MongoDB并启动"><a href="#配置MongoDB并启动" class="headerlink" title="配置MongoDB并启动"></a>配置MongoDB并启动</h2><hr><p>配置MongoDB并启动它：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">sed</span> -i <span class="token string">"s/^replication:/replication:<span class="token entity" title="\n">\n</span>  replSetName: rs01/"</span> /etc/mongod.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl daemon-reload<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> mongod <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> systemctl restart mongod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="检查MongoDB状态"><a href="#检查MongoDB状态" class="headerlink" title="检查MongoDB状态"></a>检查MongoDB状态</h2><hr><p>检查MongoDB状态：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status mongod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>让我们检查：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mongo --eval <span class="token string">"printjson(rs.initiate())"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置开机自启RocketChat"><a href="#设置开机自启RocketChat" class="headerlink" title="设置开机自启RocketChat"></a>设置开机自启RocketChat</h2><hr><p>开机启动RocketChat并马上运行它：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> rocketchat <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> systemctl start rocketchat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="检查RocketChat的运行状态"><a href="#检查RocketChat的运行状态" class="headerlink" title="检查RocketChat的运行状态"></a>检查RocketChat的运行状态</h2><hr><p>检查RocketChat的运行状态：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status rocketchat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h2><hr><p>至此我们已经安装完成RocketChat了，如果你不打算使用Nginx作为反向代理，那么你可以通过ip和端口来访问 <a href="http://127.0.0.1:3000/">http://127.0.0.1:3000</a></p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RocketChat安装搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
